require 'activesupport'
namespace :assets do
  desc "Build list of desktop images"
  task :desktop do
    catalog_file "bin/system/desktop_backgrounds", "DesktopCatalog"
  end
  
  desc "Create boot classes"
  task :boot do
    asset_file "boot", "BootLibrary"
    asset_file "boot/avatars", "Avatars"
    asset_file "boot/icons", "BootIcons"
  end
  
  desc "Create menu icon classes"
  task :menu do
    asset_file "menu_bar", "MenuBarLibrary"
  end

  desc "Create menu panel icon classes"
  task :panels do
    asset_file "panels", "PanelLibrary"
  end

  desc "Create UI library"
  task :ui do
    asset_file "ui", "UILibrary"
  end
  
  desc "testing assets"
  task :testing do
    asset_file "testing", "TestingLibrary"
  end
  
  desc 'launcher assets'
  task :launcher do
    asset_file 'launcher', 'LauncherLibrary'
  end

  desc 'dash-related assets'
  task :dash do
    asset_file 'dash', 'DashLibrary'
  end
  
  desc 'hud-related assets'
  task :hud do
    asset_file 'hud', 'HUDLibrary'
  end
  
  desc 'unr-related assets'
  task :unr do
    asset_file 'unr', "UNRLibrary"
  end
  
  desc "window assets"
  task :themes do
    Dir.entries("assets/themes/").each do |dir|
      unless dir.to_s.match(/\./)
        puts "doing dir #{dir}"
        theme_file( "themes/#{dir}", dir.classify) 
      end
    end
  end
  
  def asset_file dir, class_name
    Dir.chdir("assets/#{dir}") do
      File.open("#{class_name}.as","w") do |file|
        file << <<-END
        package #{dir.gsub("/",".")}{
          public class #{class_name}{
        END
        %w[.png .jpg .swf].each do |suffix|
          add_entries file, suffix
        end
        file << "}}"
      end
    end
    
  end
  def add_entries file, suffix
    Dir.entries(".").select{ |f| f.match(suffix) }.each do |icon|
      file << "[Embed(source='#{icon}')]\n"
      file << "public static var #{icon.gsub(suffix,"").gsub("-","_")}: Class;\n"
    end
  end
  
  def theme_file dir, class_name
     Dir.chdir("assets/#{dir}") do
       File.open("#{class_name}.as","w") do |file|
         file << <<-END
         package #{dir.gsub("/",".")}{
           import themes.Theme;
           public class #{class_name} extends Theme{
           public function #{class_name}(){
            renderer = new #{class_name}Renderer();
           }
         END
         Dir.entries(".").select{ |f|f.match(".png") }.each do |icon|
           file << "[Embed(source='#{icon}')]\n"
           file << "public var #{icon.gsub(".png","")}: Class;\n"
         end
         file << "}}"
       end
     end

   end
   
   def catalog_file dir, class_name
     File.open("assets/catalogs/#{class_name}.as","w") do |file|
      file << <<-END
      package catalogs {
      	// this file is automatically generated with rake assets:desktop
      	public class DesktopCatalog {
      		public static var BACKGROUNDS : Array = [
        END
      
      file << Dir.entries(dir).map{|f| "'#{f}'" unless f =~ /^\./ }.compact.join(",")
        
      file << <<-END
      		];
      	}
      }
      END
    end
   end
   
end