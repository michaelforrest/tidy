#!/usr/bin/env ruby
#
require 'rubygems'
require 'optparse'
require File.dirname(__FILE__) + '/../lib/tidy_project'

def run(command)
  IO.popen(command){ |process| process.each { |line| puts line } }
end

def fail_with(opts, message)
  puts "[ERROR] #{message}"
  puts ""
  puts opts
  exit
end

parser = OptionParser.new do |options|
  options.banner = <<-END
  
    Tidy is an ActionScript toolkit for people who love Ruby.
    See http://github.com/michaelforrest/tidy
    
    Creating a project:
      tidyflash new APP_PATH
      cd APP_PATH
      rake
          
    Development server:    
      tidyflash server [--bandwidth 400k]
      
    Air harness for easy tracing
      tidyflash harness path/to/index
          
  END
  
  options.separator ""
  
#  options.on("-v", "--verbose", "Show what it's doing") do
#    OPTIONS[:verbose] = true
#  end
  
  
end

command = ARGV.shift

unless command.nil?
  
  if command == 'new'
    project_name = *ARGV
    unless project_name.nil?
      TidyProject.new(project_name[0])
    else
      fail_with "","Please provide a project name"
    end
  end
  
  if command == 'server'
    
  end
  
  if command == 'harness'
    url = *ARGV
    harness = File.expand_path(File.dirname(__FILE__) + "/../tools/TidyHarness/bin/tidy_harness.axml")
    puts harness
    run "adl #{harness} -nodebug -- #{url}"
  end
  
  if command == 'generate'
    command, template_name = *ARGV

    if template_name.nil?
      fail_with "", "Please provide a generator name"
    else
      ARGV -= [ARGV[1]]
      Tidy::Generate.new(:template_id=>template_name, :args=>ARGV)
    end
  end
  
else
  puts parser.banner
end